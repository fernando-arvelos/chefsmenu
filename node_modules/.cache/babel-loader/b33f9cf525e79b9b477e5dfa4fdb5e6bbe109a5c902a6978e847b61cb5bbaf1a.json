{"ast":null,"code":"var _jsxFileName = \"/home/fernando/trybe/Git Fernando/chefsmenu/src/components/FilterButton.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilterStatus, getFilteredDrinks, getFilteredMeals, setLastClickedFilter } from '../redux/actions';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilterButton(_ref) {\n  _s();\n  let {\n    strCategory,\n    currentPath\n  } = _ref;\n  const dispatch = useDispatch();\n  const filterStatus = useSelector(state => state.recipesReducer.filterStatus);\n  const lastClickedFilter = useSelector(state => state.recipesReducer.lastClickedFilter);\n  const handleCategoryFilter = category => {\n    if (category === 'All') {\n      dispatch(changeFilterStatus(false));\n      setLastClickedFilter(category);\n      return;\n    }\n    if (lastClickedFilter !== category) {\n      if (currentPath === '/meals') dispatch(getFilteredMeals(category));\n      if (currentPath === '/drinks') dispatch(getFilteredDrinks(category));\n      dispatch(changeFilterStatus(true));\n      dispatch(setLastClickedFilter(category));\n    } else if (lastClickedFilter === category) {\n      dispatch(changeFilterStatus(!filterStatus));\n      dispatch(setLastClickedFilter(category));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => handleCategoryFilter(strCategory),\n    \"data-testid\": `${strCategory}-category-filter`,\n    className: \"btn-filter\",\n    children: strCategory\n  }, strCategory, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(FilterButton, \"kd9igss1Xg5fExkppebf4jqmISA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = FilterButton;\nFilterButton.propTypes = {\n  strCategory: PropTypes.string.isRequired,\n  currentPath: PropTypes.string.isRequired\n};\nexport default FilterButton;\nvar _c;\n$RefreshReg$(_c, \"FilterButton\");","map":{"version":3,"names":["React","PropTypes","useDispatch","useSelector","changeFilterStatus","getFilteredDrinks","getFilteredMeals","setLastClickedFilter","FilterButton","strCategory","currentPath","dispatch","filterStatus","state","recipesReducer","lastClickedFilter","handleCategoryFilter","category","propTypes","string","isRequired"],"sources":["/home/fernando/trybe/Git Fernando/chefsmenu/src/components/FilterButton.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  changeFilterStatus,\n  getFilteredDrinks,\n  getFilteredMeals,\n  setLastClickedFilter,\n} from '../redux/actions';\nimport '../index.css';\n\nfunction FilterButton({ strCategory, currentPath }) {\n  const dispatch = useDispatch();\n  const filterStatus = useSelector((state) => state.recipesReducer.filterStatus);\n  const lastClickedFilter = useSelector(\n    (state) => state.recipesReducer.lastClickedFilter,\n  );\n\n  const handleCategoryFilter = (category) => {\n    if (category === 'All') {\n      dispatch(changeFilterStatus(false));\n      setLastClickedFilter(category);\n      return;\n    }\n\n    if (lastClickedFilter !== category) {\n      if (currentPath === '/meals') dispatch(getFilteredMeals(category));\n      if (currentPath === '/drinks') dispatch(getFilteredDrinks(category));\n\n      dispatch(changeFilterStatus(true));\n      dispatch(setLastClickedFilter(category));\n    } else if (lastClickedFilter === category) {\n      dispatch(changeFilterStatus(!filterStatus));\n      dispatch(setLastClickedFilter(category));\n    }\n  };\n\n  return (\n    <button\n      key={ strCategory }\n      onClick={ () => handleCategoryFilter(strCategory) }\n      data-testid={ `${strCategory}-category-filter` }\n      className=\"btn-filter\"\n    >\n      {strCategory}\n    </button>\n  );\n}\n\nFilterButton.propTypes = {\n  strCategory: PropTypes.string.isRequired,\n  currentPath: PropTypes.string.isRequired,\n};\n\nexport default FilterButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,kBAAkB,EAClBC,iBAAiB,EACjBC,gBAAgB,EAChBC,oBAAoB,QACf,kBAAkB;AACzB,OAAO,cAAc;AAAC;AAEtB,SAASC,YAAY,OAA+B;EAAA;EAAA,IAA9B;IAAEC,WAAW;IAAEC;EAAY,CAAC;EAChD,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAC9B,MAAMU,YAAY,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,cAAc,CAACF,YAAY,CAAC;EAC9E,MAAMG,iBAAiB,GAAGZ,WAAW,CAClCU,KAAK,IAAKA,KAAK,CAACC,cAAc,CAACC,iBAAiB,CAClD;EAED,MAAMC,oBAAoB,GAAIC,QAAQ,IAAK;IACzC,IAAIA,QAAQ,KAAK,KAAK,EAAE;MACtBN,QAAQ,CAACP,kBAAkB,CAAC,KAAK,CAAC,CAAC;MACnCG,oBAAoB,CAACU,QAAQ,CAAC;MAC9B;IACF;IAEA,IAAIF,iBAAiB,KAAKE,QAAQ,EAAE;MAClC,IAAIP,WAAW,KAAK,QAAQ,EAAEC,QAAQ,CAACL,gBAAgB,CAACW,QAAQ,CAAC,CAAC;MAClE,IAAIP,WAAW,KAAK,SAAS,EAAEC,QAAQ,CAACN,iBAAiB,CAACY,QAAQ,CAAC,CAAC;MAEpEN,QAAQ,CAACP,kBAAkB,CAAC,IAAI,CAAC,CAAC;MAClCO,QAAQ,CAACJ,oBAAoB,CAACU,QAAQ,CAAC,CAAC;IAC1C,CAAC,MAAM,IAAIF,iBAAiB,KAAKE,QAAQ,EAAE;MACzCN,QAAQ,CAACP,kBAAkB,CAAC,CAACQ,YAAY,CAAC,CAAC;MAC3CD,QAAQ,CAACJ,oBAAoB,CAACU,QAAQ,CAAC,CAAC;IAC1C;EACF,CAAC;EAED,oBACE;IAEE,OAAO,EAAG,MAAMD,oBAAoB,CAACP,WAAW,CAAG;IACnD,eAAe,GAAEA,WAAY,kBAAmB;IAChD,SAAS,EAAC,YAAY;IAAA,UAErBA;EAAW,GALNA,WAAW;IAAA;IAAA;IAAA;EAAA,QAMV;AAEb;AAAC,GApCQD,YAAY;EAAA,QACFN,WAAW,EACPC,WAAW,EACNA,WAAW;AAAA;AAAA,KAH9BK,YAAY;AAsCrBA,YAAY,CAACU,SAAS,GAAG;EACvBT,WAAW,EAAER,SAAS,CAACkB,MAAM,CAACC,UAAU;EACxCV,WAAW,EAAET,SAAS,CAACkB,MAAM,CAACC;AAChC,CAAC;AAED,eAAeZ,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}