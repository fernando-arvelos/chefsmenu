{"ast":null,"code":"// meals\n// const errorMsg = 'Sorry, we haven\\'t found any recipes for these filters.';\n\nexport const fetchMealsByIngredients = async ingredients => {\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${ingredients}`);\n  const data = await response.json();\n  const firstTwelve = 12;\n  const filteredMeals = data.meals.slice(0, firstTwelve);\n  // if (filteredMeals === null) {\n  //   throw new\n  //   Error(errorMsg);\n  // }\n  return filteredMeals;\n};\nexport const fetchMealsByName = async name => {\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${name}`);\n  const data = await response.json();\n  const firstTwelve = 12;\n  const filteredMeals = data.meals.slice(0, firstTwelve);\n  // if (filteredMeals === null) {\n  //   throw new\n  //   Error(errorMsg);\n  // }\n  return filteredMeals;\n};\nexport const fetchMealsByFirstLetter = async FirstLetter => {\n  if (FirstLetter.length > 1) {\n    global.alert('Your search must have only 1 (one) character');\n  } else {\n    const response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${FirstLetter}`);\n    const data = await response.json();\n    const firstTwelve = 12;\n    const filteredMeals = data.meals.slice(0, firstTwelve);\n    // if (filteredMeals === null) {\n    //   throw new\n    //   Error(errorMsg);\n    // }\n    return filteredMeals;\n  }\n};\n\n// drinks\nexport const fetchDrinksByIngredients = async ingredients => {\n  const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ingredients}`);\n  const data = await response.json();\n  const firstTwelve = 12;\n  const filteredDrinks = data.drinks.slice(0, firstTwelve);\n  // if (filteredDrinks === null) {\n  //   throw new\n  //   Error(errorMsg);\n  // }\n  return filteredDrinks;\n};\nexport const fetchDrinksByName = async name => {\n  const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${name}`);\n  const data = await response.json();\n  const firstTwelve = 12;\n  const filteredDrinks = data.drinks.slice(0, firstTwelve);\n  // if (filteredDrinks === null) {\n  //   throw new\n  //   Error(errorMsg);\n  // }\n  return filteredDrinks;\n};\nexport const fetchDrinksByFirstLetter = async FirstLetter => {\n  if (FirstLetter.length > 1) {\n    global.alert('Your search must have only 1 (one) character');\n  } else {\n    const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${FirstLetter}`);\n    const data = await response.json();\n    const firstTwelve = 12;\n    const filteredDrinks = data.drinks.slice(0, firstTwelve);\n    // if (filteredDrinks === null) {\n    //   throw new\n    //   Error(errorMsg);\n    // }\n    return filteredDrinks;\n  }\n};","map":{"version":3,"names":["fetchMealsByIngredients","ingredients","response","fetch","data","json","firstTwelve","filteredMeals","meals","slice","fetchMealsByName","name","fetchMealsByFirstLetter","FirstLetter","length","global","alert","fetchDrinksByIngredients","filteredDrinks","drinks","fetchDrinksByName","fetchDrinksByFirstLetter"],"sources":["/home/fernando/trybe/Git Fernando/chefsmenu/src/services/Api.js"],"sourcesContent":["// meals\n// const errorMsg = 'Sorry, we haven\\'t found any recipes for these filters.';\n\nexport const fetchMealsByIngredients = async (ingredients) => {\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${ingredients}`);\n  const data = await response.json();\n  const firstTwelve = 12;\n  const filteredMeals = data.meals.slice(0, firstTwelve);\n  // if (filteredMeals === null) {\n  //   throw new\n  //   Error(errorMsg);\n  // }\n  return filteredMeals;\n};\n\nexport const fetchMealsByName = async (name) => {\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${name}`);\n  const data = await response.json();\n  const firstTwelve = 12;\n  const filteredMeals = data.meals.slice(0, firstTwelve);\n  // if (filteredMeals === null) {\n  //   throw new\n  //   Error(errorMsg);\n  // }\n  return filteredMeals;\n};\n\nexport const fetchMealsByFirstLetter = async (FirstLetter) => {\n  if (FirstLetter.length > 1) {\n    global.alert('Your search must have only 1 (one) character');\n  } else {\n    const response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${FirstLetter}`);\n    const data = await response.json();\n    const firstTwelve = 12;\n    const filteredMeals = data.meals.slice(0, firstTwelve);\n    // if (filteredMeals === null) {\n    //   throw new\n    //   Error(errorMsg);\n    // }\n    return filteredMeals;\n  }\n};\n\n// drinks\nexport const fetchDrinksByIngredients = async (ingredients) => {\n  const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ingredients}`);\n  const data = await response.json();\n  const firstTwelve = 12;\n  const filteredDrinks = data.drinks.slice(0, firstTwelve);\n  // if (filteredDrinks === null) {\n  //   throw new\n  //   Error(errorMsg);\n  // }\n  return filteredDrinks;\n};\n\nexport const fetchDrinksByName = async (name) => {\n  const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${name}`);\n  const data = await response.json();\n  const firstTwelve = 12;\n  const filteredDrinks = data.drinks.slice(0, firstTwelve);\n  // if (filteredDrinks === null) {\n  //   throw new\n  //   Error(errorMsg);\n  // }\n  return filteredDrinks;\n};\n\nexport const fetchDrinksByFirstLetter = async (FirstLetter) => {\n  if (FirstLetter.length > 1) {\n    global.alert('Your search must have only 1 (one) character');\n  } else {\n    const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${FirstLetter}`);\n    const data = await response.json();\n    const firstTwelve = 12;\n    const filteredDrinks = data.drinks.slice(0, firstTwelve);\n    // if (filteredDrinks === null) {\n    //   throw new\n    //   Error(errorMsg);\n    // }\n    return filteredDrinks;\n  }\n};\n"],"mappings":"AAAA;AACA;;AAEA,OAAO,MAAMA,uBAAuB,GAAG,MAAOC,WAAW,IAAK;EAC5D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,wDAAuDF,WAAY,EAAC,CAAC;EACnG,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAClC,MAAMC,WAAW,GAAG,EAAE;EACtB,MAAMC,aAAa,GAAGH,IAAI,CAACI,KAAK,CAACC,KAAK,CAAC,CAAC,EAAEH,WAAW,CAAC;EACtD;EACA;EACA;EACA;EACA,OAAOC,aAAa;AACtB,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAG,MAAOC,IAAI,IAAK;EAC9C,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,wDAAuDQ,IAAK,EAAC,CAAC;EAC5F,MAAMP,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAClC,MAAMC,WAAW,GAAG,EAAE;EACtB,MAAMC,aAAa,GAAGH,IAAI,CAACI,KAAK,CAACC,KAAK,CAAC,CAAC,EAAEH,WAAW,CAAC;EACtD;EACA;EACA;EACA;EACA,OAAOC,aAAa;AACtB,CAAC;AAED,OAAO,MAAMK,uBAAuB,GAAG,MAAOC,WAAW,IAAK;EAC5D,IAAIA,WAAW,CAACC,MAAM,GAAG,CAAC,EAAE;IAC1BC,MAAM,CAACC,KAAK,CAAC,8CAA8C,CAAC;EAC9D,CAAC,MAAM;IACL,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAE,wDAAuDU,WAAY,EAAC,CAAC;IACnG,MAAMT,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClC,MAAMC,WAAW,GAAG,EAAE;IACtB,MAAMC,aAAa,GAAGH,IAAI,CAACI,KAAK,CAACC,KAAK,CAAC,CAAC,EAAEH,WAAW,CAAC;IACtD;IACA;IACA;IACA;IACA,OAAOC,aAAa;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAMU,wBAAwB,GAAG,MAAOhB,WAAW,IAAK;EAC7D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,4DAA2DF,WAAY,EAAC,CAAC;EACvG,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAClC,MAAMC,WAAW,GAAG,EAAE;EACtB,MAAMY,cAAc,GAAGd,IAAI,CAACe,MAAM,CAACV,KAAK,CAAC,CAAC,EAAEH,WAAW,CAAC;EACxD;EACA;EACA;EACA;EACA,OAAOY,cAAc;AACvB,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAG,MAAOT,IAAI,IAAK;EAC/C,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,4DAA2DQ,IAAK,EAAC,CAAC;EAChG,MAAMP,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAClC,MAAMC,WAAW,GAAG,EAAE;EACtB,MAAMY,cAAc,GAAGd,IAAI,CAACe,MAAM,CAACV,KAAK,CAAC,CAAC,EAAEH,WAAW,CAAC;EACxD;EACA;EACA;EACA;EACA,OAAOY,cAAc;AACvB,CAAC;AAED,OAAO,MAAMG,wBAAwB,GAAG,MAAOR,WAAW,IAAK;EAC7D,IAAIA,WAAW,CAACC,MAAM,GAAG,CAAC,EAAE;IAC1BC,MAAM,CAACC,KAAK,CAAC,8CAA8C,CAAC;EAC9D,CAAC,MAAM;IACL,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAE,4DAA2DU,WAAY,EAAC,CAAC;IACvG,MAAMT,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClC,MAAMC,WAAW,GAAG,EAAE;IACtB,MAAMY,cAAc,GAAGd,IAAI,CAACe,MAAM,CAACV,KAAK,CAAC,CAAC,EAAEH,WAAW,CAAC;IACxD;IACA;IACA;IACA;IACA,OAAOY,cAAc;EACvB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}