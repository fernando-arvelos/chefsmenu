{"ast":null,"code":"var _jsxFileName = \"/home/fernando/trybe/Git Fernando/chefsmenu/src/pages/RecipeInProgress.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { RecipeIsFavorite, workFavorite } from '../helpers/localStoregefn';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst copy = require('clipboard-copy');\nfunction RecipeInProgress() {\n  _s();\n  const history = useHistory();\n  const [recipeData, setRecipeData] = useState([]);\n  const {\n    pathname\n  } = history.location;\n  const [checkedIngredients, setCheckedIngredients] = useState([]);\n  const [copyed, setCopyed] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = pathname.split('/')[1] === 'meals' ? `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${pathname.split('/')[2]}` : `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${pathname.split('/')[2]}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setRecipeData(data);\n    };\n    fetchData();\n    setIsFavorite(!RecipeIsFavorite(pathname));\n  }, [pathname]);\n  useEffect(() => {\n    const savedIngredients = localStorage.getItem('checkedIngredients');\n    if (savedIngredients) {\n      setCheckedIngredients(JSON.parse(savedIngredients));\n    }\n  }, []);\n  const dataRender = pathname.split('/')[1] === 'drinks' ? recipeData === null || recipeData === void 0 ? void 0 : recipeData.drinks : recipeData === null || recipeData === void 0 ? void 0 : recipeData.meals;\n  const getIngredients = () => {\n    const numberLimit = 25;\n    const listOfIngredients = [];\n    if (dataRender) {\n      for (let index = 1; index <= numberLimit; index += 1) {\n        const ingredient = dataRender[0][`strIngredient${index}`];\n        const measure = dataRender[0][`strMeasure${index}`];\n        if (ingredient) {\n          listOfIngredients.push(`${ingredient} - ${measure}`);\n        }\n      }\n    }\n    return listOfIngredients;\n  };\n  const ingredientsArray = getIngredients();\n  const saveInLocalStorage = event => {\n    const {\n      name,\n      checked\n    } = event.target;\n    const updatedIngredients = checked ? [...checkedIngredients, name] : checkedIngredients.filter(ingredient => ingredient !== name);\n    setCheckedIngredients(updatedIngredients);\n    localStorage.setItem('checkedIngredients', JSON.stringify(updatedIngredients));\n  };\n  const scratchText = event => {\n    const label = event.target.parentNode;\n    if (event.target.checked) {\n      label.style.textDecoration = 'line-through';\n    } else {\n      label.style.textDecoration = 'none';\n    }\n    saveInLocalStorage(event);\n  };\n  const isChecked = ingredient => checkedIngredients.includes(ingredient);\n  const saveRecipe = () => {\n    const dateNow = new Date();\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes')) || [];\n    const recipe = {\n      id: dataRender[0].idMeal || dataRender[0].idDrink,\n      nationality: dataRender[0].strArea || '',\n      name: dataRender[0].strMeal || dataRender[0].strDrink,\n      category: dataRender[0].strCategory || '',\n      image: dataRender[0].strMealThumb || dataRender[0].strDrinkThumb,\n      tags: dataRender[0].strTags === null ? [] : dataRender[0].strTags.split(','),\n      alcoholicOrNot: dataRender[0].strAlcoholic || '',\n      type: pathname.split('/')[1] === 'drinks' ? 'drink' : 'meal',\n      doneDate: dateNow\n    };\n    doneRecipes.push(recipe);\n    localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\n    history.push('/done-recipes');\n  };\n  const onShare = () => {\n    copy(window.location.href.replace('/in-progress', ''));\n    setCopyed(true);\n    global.alert('Link copied!');\n  };\n  const onFavorite = () => {\n    setIsFavorite(RecipeIsFavorite(pathname));\n    workFavorite(recipeData, pathname);\n  };\n  const finish = checkedIngredients.filter(ingredient => ingredientsArray.includes(ingredient));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [pathname.split('/')[1] === 'drinks' || pathname.split('/')[1] === 'meals' ? dataRender && dataRender.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: dataRender[0].strDrinkThumb || dataRender[0].strMealThumb,\n        alt: \"\",\n        \"data-testid\": \"recipe-photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), copyed ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Link copied!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 24\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onShare,\n        \"data-testid\": \"share-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: shareIcon,\n          alt: \"share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onFavorite,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-testid\": \"favorite-btn\",\n          src: isFavorite ? blackHeartIcon : whiteHeartIcon,\n          alt: \"share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        \"data-testid\": \"recipe-title\",\n        children: dataRender[0].strDrink || dataRender[0].strMeal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        \"data-testid\": \"recipe-category\",\n        children: dataRender[0].strCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), pathname.split('/')[1] === 'drinks' && /*#__PURE__*/_jsxDEV(\"h3\", {\n        \"data-testid\": \"recipe-category\",\n        children: dataRender[0].strAlcoholic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-container\",\n        children: ingredientsArray.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: ingredient,\n          \"data-testid\": `${index}-ingredient-step`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: ingredient,\n            id: ingredient,\n            onChange: event => scratchText(event),\n            checked: isChecked(ingredient)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              textDecoration: isChecked(ingredient) ? 'line-through' : 'none'\n            },\n            children: ingredient\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"instructions\",\n        children: dataRender[0].strInstructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      \"data-testid\": \"finish-recipe-btn\",\n      disabled: finish.length !== ingredientsArray.length,\n      onClick: saveRecipe,\n      children: \"Finalizar Receita\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeInProgress, \"DbBwTxCTTbbN2v/X6ZrPgGnDIjM=\", false, function () {\n  return [useHistory];\n});\n_c = RecipeInProgress;\nexport default RecipeInProgress;\nvar _c;\n$RefreshReg$(_c, \"RecipeInProgress\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","RecipeIsFavorite","workFavorite","shareIcon","blackHeartIcon","whiteHeartIcon","copy","require","RecipeInProgress","history","recipeData","setRecipeData","pathname","location","checkedIngredients","setCheckedIngredients","copyed","setCopyed","isFavorite","setIsFavorite","fetchData","url","split","response","fetch","data","json","savedIngredients","localStorage","getItem","JSON","parse","dataRender","drinks","meals","getIngredients","numberLimit","listOfIngredients","index","ingredient","measure","push","ingredientsArray","saveInLocalStorage","event","name","checked","target","updatedIngredients","filter","setItem","stringify","scratchText","label","parentNode","style","textDecoration","isChecked","includes","saveRecipe","dateNow","Date","doneRecipes","recipe","id","idMeal","idDrink","nationality","strArea","strMeal","strDrink","category","strCategory","image","strMealThumb","strDrinkThumb","tags","strTags","alcoholicOrNot","strAlcoholic","type","doneDate","onShare","window","href","replace","global","alert","onFavorite","finish","length","map","strInstructions"],"sources":["/home/fernando/trybe/Git Fernando/chefsmenu/src/pages/RecipeInProgress.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { RecipeIsFavorite,\n  workFavorite } from '../helpers/localStoregefn';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\n\nconst copy = require('clipboard-copy');\n\nfunction RecipeInProgress() {\n  const history = useHistory();\n  const [recipeData, setRecipeData] = useState([]);\n  const { pathname } = history.location;\n  const [checkedIngredients, setCheckedIngredients] = useState([]);\n  const [copyed, setCopyed] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = pathname.split('/')[1] === 'meals'\n        ? `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${pathname.split('/')[2]}`\n        : `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${pathname.split('/')[2]}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setRecipeData(data);\n    };\n    fetchData();\n    setIsFavorite(!RecipeIsFavorite(pathname));\n  }, [pathname]);\n\n  useEffect(() => {\n    const savedIngredients = localStorage.getItem('checkedIngredients');\n    if (savedIngredients) {\n      setCheckedIngredients(JSON.parse(savedIngredients));\n    }\n  }, []);\n\n  const dataRender = pathname\n    .split('/')[1] === 'drinks' ? recipeData?.drinks\n    : recipeData?.meals;\n\n  const getIngredients = () => {\n    const numberLimit = 25;\n    const listOfIngredients = [];\n    if (dataRender) {\n      for (let index = 1; index <= numberLimit; index += 1) {\n        const ingredient = dataRender[0][`strIngredient${index}`];\n        const measure = dataRender[0][`strMeasure${index}`];\n        if (ingredient) {\n          listOfIngredients.push(`${ingredient} - ${measure}`);\n        }\n      }\n    }\n    return listOfIngredients;\n  };\n\n  const ingredientsArray = getIngredients();\n\n  const saveInLocalStorage = (event) => {\n    const { name, checked } = event.target;\n    const updatedIngredients = checked\n      ? [...checkedIngredients, name]\n      : checkedIngredients.filter((ingredient) => ingredient !== name);\n\n    setCheckedIngredients(updatedIngredients);\n    localStorage.setItem('checkedIngredients', JSON.stringify(updatedIngredients));\n  };\n\n  const scratchText = (event) => {\n    const label = event.target.parentNode;\n\n    if (event.target.checked) {\n      label.style.textDecoration = 'line-through';\n    } else {\n      label.style.textDecoration = 'none';\n    }\n    saveInLocalStorage(event);\n  };\n\n  const isChecked = (ingredient) => checkedIngredients.includes(ingredient);\n\n  const saveRecipe = () => {\n    const dateNow = new Date();\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes')) || [];\n    const recipe = {\n      id: dataRender[0].idMeal || dataRender[0].idDrink,\n      nationality: dataRender[0].strArea || '',\n      name: dataRender[0].strMeal || dataRender[0].strDrink,\n      category: dataRender[0].strCategory || '',\n      image: dataRender[0].strMealThumb || dataRender[0].strDrinkThumb,\n      tags: dataRender[0].strTags === null ? [] : dataRender[0].strTags.split(','),\n      alcoholicOrNot: dataRender[0].strAlcoholic || '',\n      type: pathname.split('/')[1] === 'drinks' ? 'drink' : 'meal',\n      doneDate: dateNow,\n    };\n    doneRecipes.push(recipe);\n    localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\n    history.push('/done-recipes');\n  };\n\n  const onShare = () => {\n    copy(window.location.href.replace('/in-progress', ''));\n    setCopyed(true);\n    global.alert('Link copied!');\n  };\n\n  const onFavorite = () => {\n    setIsFavorite(RecipeIsFavorite(pathname));\n    workFavorite(recipeData, pathname);\n  };\n\n  const finish = checkedIngredients\n    .filter((ingredient) => ingredientsArray.includes(ingredient));\n\n  return (\n    <div>\n      {pathname.split('/')[1] === 'drinks'\n      || pathname.split('/')[1] === 'meals' ? (\n          dataRender\n        && dataRender.length > 0\n        && (\n          <div className=\"flex flex-col\">\n            <img\n              src={ dataRender[0].strDrinkThumb || dataRender[0].strMealThumb }\n              alt=\"\"\n              data-testid=\"recipe-photo\"\n            />\n            { copyed ? <p>Link copied!</p> : ''}\n            <button\n              onClick={ onShare }\n              data-testid=\"share-btn\"\n            >\n              <img\n                src={ shareIcon }\n                alt=\"share\"\n              />\n            </button>\n            <button\n              onClick={ onFavorite }\n            >\n              <img\n                data-testid=\"favorite-btn\"\n                src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\n                alt=\"share\"\n              />\n            </button>\n            <h1 data-testid=\"recipe-title\">\n              {dataRender[0].strDrink || dataRender[0].strMeal}\n            </h1>\n            <h2 data-testid=\"recipe-category\">{dataRender[0].strCategory}</h2>\n            {pathname.split('/')[1] === 'drinks' && (\n              <h3 data-testid=\"recipe-category\">{dataRender[0].strAlcoholic}</h3>\n            )}\n            <div className=\"checkbox-container\">\n              {ingredientsArray.map((ingredient, index) => (\n                <label\n                  htmlFor={ ingredient }\n                  key={ index }\n                  data-testid={ `${index}-ingredient-step` }\n                >\n                  <input\n                    type=\"checkbox\"\n                    name={ ingredient }\n                    id={ ingredient }\n                    key={ index }\n                    onChange={ (event) => scratchText(event) }\n                    checked={ isChecked(ingredient) }\n                  />\n                  <span\n                    style={ {\n                      textDecoration: isChecked(ingredient)\n                        ? 'line-through'\n                        : 'none',\n                    } }\n                  >\n                    {ingredient}\n                  </span>\n                </label>\n              ))}\n            </div>\n            <p data-testid=\"instructions\">{dataRender[0].strInstructions}</p>\n          </div>\n        )\n        ) : null}\n      <button\n        data-testid=\"finish-recipe-btn\"\n        disabled={ finish.length !== ingredientsArray.length }\n        onClick={ saveRecipe }\n      >\n        Finalizar Receita\n      </button>\n    </div>\n  );\n}\n\nexport default RecipeInProgress;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}