{"ast":null,"code":"const setFavorites = favorites => localStorage.setItem('favoriteRecipes', JSON.stringify([...favorites]));\nexport const getFavorites = () => JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\nexport const workFavorite = (data, pathname) => {\n  const type = pathname.includes('meals') ? 'meals' : 'drinks';\n  const typeName = pathname.includes('meals') ? 'Meal' : 'Drink';\n  const id = pathname.split('/')[2];\n  console.log(id);\n  const favRecipes = getFavorites();\n  const isFavorite = favRecipes.some(recipe => Number(recipe.id) === Number(id));\n  if (isFavorite) {\n    const newFavorites = favRecipes.filter(recipe => Number(recipe.id) !== Number(id));\n    setFavorites(newFavorites);\n    return;\n  }\n  const itens = data[type][0];\n  const favObject = {\n    id: itens[`id${typeName}`],\n    type: typeName.toLocaleLowerCase(),\n    nationality: itens.strArea ? itens.strArea : '',\n    category: itens.strCategory,\n    alcoholicOrNot: itens.strAlcoholic ? itens.strAlcoholic : '',\n    name: itens[`str${typeName}`],\n    image: itens[`str${typeName}Thumb`]\n  };\n  const newArray = [...favRecipes, favObject];\n  setFavorites(newArray);\n};\nexport const RecipeIsFavorite = pathname => {\n  // const type = pathname.includes('meals') ? 'meals' : 'drinks';\n  const id = pathname.split('/')[2];\n  const favRecipes = getFavorites();\n  const isIt = favRecipes.some(recipe => Number(recipe.id) === Number(id));\n  return !isIt;\n};\n_c = RecipeIsFavorite;\nexport const getDoneRecipes = () => JSON.parse(localStorage.getItem('doneRecipes')) || [];\nexport const wasDone = pathname => {\n  const type = pathname.includes('meals') ? 'meals' : 'drinks';\n  const id = pathname.replace(`/${type}/`, '');\n  const recipes = getDoneRecipes();\n  if (recipes.length === 0) return false;\n  const done = recipes.some(recipe => Number(recipe.id) === Number(id));\n  return done;\n};\nexport const getInProgress = () => JSON.parse(localStorage.getItem('inProgressRecipes')) || {};\nexport const isInProgress = pathname => {\n  const type = pathname.includes('meals') ? 'meals' : 'drinks';\n  const id = pathname.replace(`/${type}/`, '');\n  const recipes = getInProgress();\n  if (!recipes[type]) return false;\n  if (recipes[type][`${id}`]) return true;\n};\nexport const updateFavorites = (curObj, id) => {\n  const favRecipes = getFavorites();\n  const isFavorite = favRecipes.some(recipe => Number(recipe.id) === Number(id));\n  if (isFavorite) {\n    const newFavorites = favRecipes.filter(recipe => Number(recipe.id) !== Number(id));\n    setFavorites(newFavorites);\n    return newFavorites;\n  }\n  const newArray = [...favRecipes, curObj];\n  setFavorites(newArray);\n  return newArray;\n};\nvar _c;\n$RefreshReg$(_c, \"RecipeIsFavorite\");","map":{"version":3,"names":["setFavorites","favorites","localStorage","setItem","JSON","stringify","getFavorites","parse","getItem","workFavorite","data","pathname","type","includes","typeName","id","split","console","log","favRecipes","isFavorite","some","recipe","Number","newFavorites","filter","itens","favObject","toLocaleLowerCase","nationality","strArea","category","strCategory","alcoholicOrNot","strAlcoholic","name","image","newArray","RecipeIsFavorite","isIt","getDoneRecipes","wasDone","replace","recipes","length","done","getInProgress","isInProgress","updateFavorites","curObj"],"sources":["/home/fernando/trybe/Git Fernando/chefsmenu/src/helpers/localStoregefn.js"],"sourcesContent":["const setFavorites = (favorites) => localStorage\n  .setItem('favoriteRecipes', JSON.stringify([...favorites]));\nexport const getFavorites = () => JSON\n  .parse(localStorage.getItem('favoriteRecipes')) || [];\n\nexport const workFavorite = (data, pathname) => {\n  const type = pathname.includes('meals') ? 'meals' : 'drinks';\n  const typeName = pathname.includes('meals') ? 'Meal' : 'Drink';\n  const id = pathname.split('/')[2];\n  console.log(id);\n\n  const favRecipes = getFavorites();\n\n  const isFavorite = favRecipes.some((recipe) => Number(recipe.id) === Number(id));\n\n  if (isFavorite) {\n    const newFavorites = favRecipes.filter((recipe) => Number(recipe.id) !== Number(id));\n    setFavorites(newFavorites);\n    return;\n  }\n\n  const itens = data[type][0];\n\n  const favObject = {\n    id: itens[`id${typeName}`],\n    type: typeName.toLocaleLowerCase(),\n    nationality: itens.strArea ? itens.strArea : '',\n    category: itens.strCategory,\n    alcoholicOrNot: itens.strAlcoholic ? itens.strAlcoholic : '',\n    name: itens[`str${typeName}`],\n    image: itens[`str${typeName}Thumb`],\n  };\n\n  const newArray = [...favRecipes, favObject];\n  setFavorites(newArray);\n};\n\nexport const RecipeIsFavorite = (pathname) => {\n  // const type = pathname.includes('meals') ? 'meals' : 'drinks';\n  const id = pathname.split('/')[2];\n\n  const favRecipes = getFavorites();\n\n  const isIt = favRecipes.some((recipe) => Number(recipe.id) === Number(id));\n  return !isIt;\n};\n\nexport const getDoneRecipes = () => JSON.parse(localStorage.getItem('doneRecipes')) || [];\n\nexport const wasDone = (pathname) => {\n  const type = pathname.includes('meals') ? 'meals' : 'drinks';\n  const id = pathname.replace(`/${type}/`, '');\n\n  const recipes = getDoneRecipes();\n  if (recipes.length === 0) return false;\n  const done = recipes.some((recipe) => Number(recipe.id) === Number(id));\n  return done;\n};\n\nexport const getInProgress = () => JSON\n  .parse(localStorage.getItem('inProgressRecipes')) || {};\n\nexport const isInProgress = (pathname) => {\n  const type = pathname.includes('meals') ? 'meals' : 'drinks';\n  const id = pathname.replace(`/${type}/`, '');\n\n  const recipes = getInProgress();\n\n  if (!recipes[type]) return false;\n\n  if (recipes[type][`${id}`]) return true;\n};\n\nexport const updateFavorites = (curObj, id) => {\n  const favRecipes = getFavorites();\n\n  const isFavorite = favRecipes.some((recipe) => Number(recipe.id) === Number(id));\n\n  if (isFavorite) {\n    const newFavorites = favRecipes.filter((recipe) => Number(recipe.id) !== Number(id));\n    setFavorites(newFavorites);\n    return newFavorites;\n  }\n\n  const newArray = [...favRecipes, curObj];\n  setFavorites(newArray);\n  return newArray;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}